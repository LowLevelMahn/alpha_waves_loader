#include "emu.hpp"

#include "types.hpp"
#include "helper.hpp"

#include <vector>
#include <cstdint>
#include <cassert>
#include <string>

namespace original
{
    void emu_read_some_file_sub_4( emu_t& e,
                                   const uint8_t byte_55_,
                                   emu_t::ptr16_t& executable_buffer_,
                                   const slice_t& executable_buffer_slice_ );
}

void emu_GAME_START_sub_6( emu_t& e, emu_t::ptr16_t& executable_buffer_ )
{
    uint8_t fake_PSP_DTA[] = {
        0xCD, 0x20, 0xE8, 0xA2, 0x00, 0xEA, 0xFF, 0xFF, 0xAD, 0xDE, 0x7A, 0x08, 0xDD, 0x01, 0x00, 0x00, 0x18, 0x01,
        0xA2, 0x0B, 0xDD, 0x01, 0xDD, 0x01, 0x01, 0x01, 0x01, 0x00, 0x02, 0x03, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x14, 0x00, 0x18, 0x00,
        0xE9, 0x02, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xCD, 0x21, 0xCB, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x02, 0x20, 0x34, 0x0D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00 };

    void* dest = e.memory( executable_buffer_ );

    ::memcpy( dest, fake_PSP_DTA, sizeof( fake_PSP_DTA ) );

    executable_buffer_.segment += 16; //
}

// TODO:
// 1. unit-test frame for original and port
// 2. port to pure C/C++

int main()
{
    // VGA blocks from config.tat
    const uint8_t blocks[] = { 0x70, 0x72, 0x6F, 0x67, 0x73, 0x2E, 0x63, 0x63, 0x31, 0x00 /*0x20*/, 0x20, 0x20,
                               0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x02, 0x50, 0x04, 0x00,          0x00, 0x00,
                               0x70, 0x72, 0x6F, 0x67, 0x73, 0x2E, 0x63, 0x63, 0x31, 0x00 /*0x20*/, 0x20, 0x20,
                               0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x01, 0x50, 0x04, 0x00,          0x00, 0x00,
                               0x70, 0x72, 0x6F, 0x67, 0x73, 0x2E, 0x63, 0x63, 0x31, 0x00 /*0x20*/, 0x20, 0x20,
                               0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00, 0x50, 0x04, 0x00,          0x00, 0x00,
                               0x70, 0x72, 0x6F, 0x67, 0x73, 0x2E, 0x63, 0x63, 0x31, 0x00 /*0x20*/, 0x20, 0x20,
                               0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x04, 0x91, 0x04, 0x00,          0x00, 0x00 };

    for( int b = 0; b < 4; ++b )
    {
        emu_t e;

        std::fill( e.memory().begin(), e.memory().end(), 0x00 );

        const emu_t::ptr16_t block_begin_ptr16( 0, 0x100D );
        const size_t blocks_begin = emu_t::offset32( block_begin_ptr16 );
        const size_t blockes_end = blocks_begin + sizeof( blocks );

        const emu_t::ptr16_t executable_buffer_begin_ptr16( 0x2E9, 0 );
        const size_t executable_buffer_begin = emu_t::offset32( executable_buffer_begin_ptr16 );
        const size_t executable_buffer_size = 0x9D160;
        const size_t executable_buffer_end = executable_buffer_begin + executable_buffer_size;
        slice_t executable_buffer_slice{ e.memory( executable_buffer_begin ), executable_buffer_size };

        ::memcpy( e.memory( blocks_begin ), blocks, sizeof( blocks ) );
        e.cs = block_begin_ptr16.segment;
        e.bx = block_begin_ptr16.offset + ( b * sizeof( gfx_block_t ) );

        emu_t::ptr16_t executable_buffer_ptr16 = executable_buffer_begin_ptr16;

        emu_GAME_START_sub_6( e, executable_buffer_ptr16 );

        {
            const uint8_t byte_55 = e.memory<gfx_block_t>( e.cs, e.bx )->byte_13h;

            write_binary_file( "d:/temp/out.1.set_psp_dta.bin", e.memory( executable_buffer_begin ),
                               executable_buffer_size );

            original::emu_read_some_file_sub_4( e, byte_55, executable_buffer_ptr16, executable_buffer_slice );

            // result after PSP
        }

        int brk = 1;
    }

    return 0;
}
